version: '3.8'
services:
  api:
    image: akhilmhdh/tinkerhub-platform-api:v1
    container_name: platform-api
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PORT=${API_PORT}
      - DATABASE_URL=postgresql://${API_DB_USER}:${API_DB_PASS}@db:5432/${API_DB_NAME}
      - SUPERTOKENS_URI=${SUPERTOKENS_URI}
      - SUPERTOKENS_API_KEY=${SUPERTOKENS_API_KEY}
      - APP_NAME=${API_SUPERTOKENS_APP_NAME}
      - SUPERTOKENS_API_DOMAIN=${API_SUPERTOKENS_API_DOMAIN}
      - SUPERTOKENS_WEBSITE_DOMAIN=${API_SUPERTOKENS_WEBSITE_DOMAIN}
      - SUPERTOKENS_PATH=${API_SUPERTOKENS_PATH}
      - MSG91_API_DOMAIN=${API_MSG91_API_DOMAIN}
      - MSG91_SENDER_ID=${API_MSG91_SENDER_ID}
      - MSG91_FLOW_ID=${API_MSG91_FLOW_ID}
      - MSG91_SHORT_URL=${API_MSG91_SHORT_URL}
      - MSG91_AUTH_KEY=${API_MSG91_AUTH_KEY}
  db:
    image: postgres:14
    container_name: platform-db
    volumes:
      - ./tmp/pg:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${API_DB_USER}
      - POSTGRES_PASSWORD=${API_DB_PASS}
      - POSTGRES_DB=${API_DB_NAME}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${API_DB_USER} -d ${API_DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5
  nocodb:
    image: nocodb/nocodb:0.99.0
    container_name: platform-noco
    ports:
      - '8080:8080'
    restart: always
    networks:
      - app_network
      - default
    volumes:
      - './tmp/noco:/usr/app/data'
  stdb:
    image: postgres:14
    container_name: platform-stdb
    environment:
      - POSTGRES_USER=${SUPERTOKENS_DB_USER}
      - POSTGRES_PASSWORD=${SUPERTOKENS_DB_PASS}
      - POSTGRES_DB=${SUPERTOKENS_DB_NAME}
    networks:
      - app_network
    restart: unless-stopped
    volumes:
      - './tmp/st:/usr/app/data'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${SUPERTOKENS_DB_USER} -d ${SUPERTOKENS_DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:4.2
    container_name: platform-st
    depends_on:
      - stdb
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: 'postgresql://${SUPERTOKENS_DB_USER}:${SUPERTOKENS_DB_PASS}@stdb:5432/${SUPERTOKENS_DB_NAME}'
      API_KEYS: ${SUPERTOKENS_API_KEY}
    networks:
      - app_network
      - default
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge
